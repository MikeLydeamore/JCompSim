}
# Histogram of ages of first infection.
ggplot(data = filter(df_skinsores_filtered, status == 1)) + geom_histogram(aes(x=time*12), bins=60, colour="black") + theme_bw() + labs(x="Age [months]", y="Frequency") +
theme(text = element_text(size=12)) + scale_x_continuous(limits = c(0, 60), expand=c(0,0)) + scale_y_continuous(limits = c(0, NA), expand=c(0,0)) + expand_limits(y=60) +
theme(panel.grid = element_blank())
if (saveGraphics) {
ggsave(paste(graphicsPathName, "gas_ages_inection_histogram.png", sep=""), width = 13.58, height = 8.75, units="cm", type = "cairo-png")
}
#Bar chart of medians.
ggplot(data = medianFrame) + geom_boxplot(aes(x=model, lower=lower*12, upper=upper*12, middle=median*12, ymax = upper*12, ymin = lower*12, fill=model), stat = "identity") + facet_grid(.~community) +
theme_bw() + labs(x="Model", y="Median Age [months]") +
theme(text = element_text(size=7), axis.text.x = element_blank(), legend.title = element_blank(), panel.grid = element_blank()) + #+ scale_fill_grey(start = 0.35, name="Model")
coord_cartesian(ylim=c(0, 18))
if (saveGraphics) {
ggsave(paste(graphicsPathName, "gas_median_comparisons.png", sep=""), width = 13.58, height = 8.75, units="cm", type = "cairo-png")
}
ggplot(data = medianFrame) + geom_boxplot(aes(x=community, lower=lower*12, upper=upper*12, middle=median*12, ymax = upper*12, ymin = lower*12, fill=community), stat = "identity") + facet_grid(.~model) +
theme_bw() + labs(x="Community", y="Median Age [months]", fill="Community") + theme(text = element_text(size=7), axis.text.x= element_blank()) + theme(panel.grid = element_blank()) + #+ scale_fill_grey(start = 0.35, name="Model")
coord_cartesian(ylim=c(0, 18))
colnames(KMFrame) <- c("Time", "S", "upper", "lower", "Community", "residualParametric")
colnames(MLEFrame) <- c("Time", "S", "Community")
KMFrame$Model <- rep("Kaplan-Meier", nrow(KMFrame))
MLEFrame$Model <- rep("Parametric", nrow(MLEFrame))
CoxFrame$Model <- rep("Cox", nrow(CoxFrame))
survframe <- rbind.fill(KMFrame, MLEFrame, CoxFrame)
ggplot(data = survframe) + geom_line(aes(x=Time*12, y=S, colour=Community)) + facet_grid(.~Model) +
theme_bw() + theme(text = element_text(size = 7)) +
labs(x="Age [months]", y="S(t)") +
scale_x_continuous(limits = c(0, 60), expand=c(0,0)) + scale_y_continuous(limits = c(0, 1), expand=c(0,0)) +
theme(panel.grid = element_blank())
head(MedianFrame)
head(medianFrame)
1/medianFrame$median
coxmeds <- filter(medianFrame, model == Cox)
coxmeds <- filter(medianFrame, model == "Cox")
coxmeds
coxmeds$age <- 1/coxmeds$median
coxmeds
coxmeds$agediff <- coxmeds$age - coxmeds$age[1]
coxmeds
coxmeds*12
coxmeds$age <- coxmeds$age * 12
coxmeds$agediff <- coxmeds$agediff * 12
coxmeds
coxmeds$median <- coxmeds$median * 12
coxmeds
coxmeds$agediff <- coxmeds$median - coxmeds$median[1]
coxmeds
cox_month <- coxph(Surv(time, status)~birth_quarter)
cox_month <- coxph(Surv(time, status)~birth_quarter, data=df_skinsores_filtered)
summary(cox_month)
covariates <- data.frame(rbind(rep(0,4), diag(4)))
covariates
covariates <- data.frame(rbind(rep(0,3), diag(3)))
covariates
colnames(covariates) <- c("Apr-Jun","Jul-Sept","Oct-Dec")
covariates
CPH <- survfit(cox_month, newdata=covariates)
colnames(covariates) <- c("birth_quarter2","birth_quarter3","birth_quarter4")
CPH <- survfit(cox_month, newdata=covariates)
cox_month <- coxph(Surv(time, status)~birth_quarter2+birth_quarter3+birth_quarter4)
cox_month <- coxph(Surv(time, status)~birth_quarter2+birth_quarter3+birth_quarter4, data=df_skinsores_filtered)
head(df_skinsores_filtered)
covariates <- c("2","3","4")
CPH <- survfit(cox_month, newdata=covariates)
covariates <- as.factor(c("1","2","3","4"))
covariates <- covariates[-1]
CPH <- survfit(cox_month, newdata=covariates)
colnames(covariates) <- "birth_quarter"
head(covariates)
covariates <- t(covariates)
colnames(covariates) <- "birth_quarter"
covariates
t(covariates)
covariates <- t(covariates)
colnames(covariates) <- "birth_quarter"
covariates
CPH <- survfit(cox_month, newdata=covariates)
cox_month
summary(cox_month)
cox_month$means
covariates <- data.frame("birth_quarter"=c(2, 3, 4))
CPH <- survfit(cox_month, newdata=covariates)
covariates <- data.frame("birth_quarter"=as.factor(c(2, 3, 4)))
CPH <- survfit(cox_month, newdata=covariates)
CPH
covariates <- data.frame("birth_quarter"=as.factor(c(1, 2, 3, 4)))
CPH
CPH <- survfit(cox_month, newdata=covariates)
CPH
0.619*1.5
0.619/1.5
fitCPH
CPH
coxmeds
0.61*12
fitCPH <- coxph(Surv(time, status)~community_B+community_C+community_D+community_E, data=df_skinsores_filtered)
covariates <- data.frame(rbind(rep(0,4), diag(4)))
colnames(covariates) <- c("community_B","community_C","community_D","community_E")
CPH <- survfit(fitCPH, newdata = covariates)
CPH
0.665*2
0.665*12
0.589*12
7.98/1.21
summary(CPH)$table[,"median"]
7.98/7.06
fitCPH
0.665/0.589
0.5/1.22
plot(CPH$time, CPH$surv)
head(CPH$time)
head(CPH$surv)
ggframe <- data.frame(time = CPH$time, surv = CPH$surv)
colnames(ggframe) <- c("Time","A","B","C", "D", "E")
CoxFrame <- reshape2:::melt.data.frame(data=ggframe, id.vars = "Time", variable.name = "Community", value.name="S")
head(CoxFrame)
levels(CoxFrame$Community)
ggplot(data = filter(CoxFrame, Community==A)) + geom_line(aes(x=Time, y=S))
ggplot(data = filter(CoxFrame, Community=="A")) + geom_line(aes(x=Time, y=S))
ggplot(data = filter(CoxFrame, Community=="A")) + geom_line(aes(x=Time, y=S)) + geom_line(aes(x=Time, y=S^1.21), linetype="dotted")
exp(-1)
-exp(1)
5^3
125^-3
125^(-3)
125^(1/3)
5^exp(2)
(5^exp(2))^exp(-2)
ggplot(data = filter(CoxFrame, Community=="A")) + geom_line(aes(x=Time, y=S)) + geom_line(aes(x=Time, y=S^1.21), linetype="dotted") + geom_vline(aes(xintercept=0.665))
0.665^-1.21
CPH
fitCPH
summary(fitCPH)
0.665*0.8198
0.5^0.82
CPH
CPH*12
0.474*12
(0.665-0.474)*12
coxmeds
0.474*12
CPH_ss_communities <- CPH
fitCPH <- coxph(Surv(time, status)~birth_quarter, data=df_skinsores_filtered)
covariates <- data.frame("birth_quarter"=as.factor(c("1","2","3","4")))
CPH <- survfit(fitCPH, newdata=covariates)
CPH
0.460*12
(0.619-0.460)*12
CPH_ss_birthquarters <- CPH
#Scabies
library(pryr)
library(plyr)
library(dplyr)
library(ggplot2)
source('~/Documents/PhD/GAS/2016_East_Arnhem_Healthy_Skin/clinic/scripts/regressionTesting.R')
library(Cairo)
graphicsPathName <- "/Users/mlydeamore/Documents/PhD/GAS/2016_East_Arnhem_Healthy_Skin/clinic/scripts/regression/"
saveGraphics <- F
#Data loading
df_scabies <- loadScabiesData()
df_scabies_filtered <- filter(df_scabies, birth_year != 2006)
#Cox - All covariates
fullCPH <- coxph(Surv(time, status)~community+sex+pre_skin_day+birth_quarter, data=df_scabies_filtered)
#COX - Just Community
fitCPH <- coxph(Surv(time, status)~community_B+community_C+community_D+community_E, data=df_scabies_filtered)
covariates <- data.frame(rbind(rep(0,4), diag(4)))
colnames(covariates) <- c("community_B","community_C","community_D","community_E")
CPH <- survfit(fitCPH, newdata = covariates)
ggframe <- data.frame(time = CPH$time, surv = CPH$surv)
colnames(ggframe) <- c("Time","A","B","C", "D", "E")
CoxFrame <- reshape2:::melt.data.frame(data=ggframe, id.vars = "Time", variable.name = "Community", value.name="S")
#Parametric
listMLE <- lapply(levels(df_scabies_filtered$community), function(x) {fitParametricBy(df_scabies_filtered, x)})
MLETime <- seq(0, 6, 0.02)
l <- lapply(1:5, function(x) { convertMLEToFrame(MLETime, listMLE[[x]], levels(df_scabies_filtered$community)[x])})
MLEFrame <- rbind.fill(l)
#Bootstrapping for CI:
estimatesLambda <- lapply(1:5, function(x) {
bootstr <- bootstrap(listMLE[[x]]$alpha, listMLE[[x]]$lambda, df = filter(df_scabies_filtered, community == levels(df_scabies_filtered$community)[x]), n = 200)
estimatesAlpha <- sapply(X = bootstr["estimate", ], FUN=head, 1)
estimatesLambda <- sapply(X = bootstr["estimate",], FUN=tail, 1)
medians <- -log((0.5-estimatesAlpha)/(1-estimatesAlpha)) /estimatesLambda
return (data.frame(community = levels(df_scabies_filtered$community)[x],
lower = quantile(medians, probs = 0.05), upper = quantile(medians, probs = 0.95),
lowerAlpha = quantile(estimatesAlpha, probs=0.05), upperAlpha = quantile(estimatesAlpha, probs=0.95),
lowerMean = quantile(1/estimatesLambda, probs=0.05), upperMean = quantile(1/estimatesLambda, probs=0.95)))})
#Kaplan-Meier
KMScabies <- lapply(levels(df_scabies_filtered$community), fitKMByCommunity)
KMList <- lapply(1:5, function(x) { ret <- data.frame(Time=KMScabies[[x]]$time, surv=KMScabies[[x]]$surv, upper=KMScabies[[x]]$upper, lower=KMScabies[[x]]$lower,
Community = rep(levels(df_scabies_filtered$community)[x], length(KMScabies[[x]]$time)) )} )
KMFrame <- rbind.fill(KMList)
#Residuals
residualParametric <- sapply(seq(1, nrow(KMFrame)), function(x) { calculateParametricEstimateAtTime(KMFrame[x, "Time"], listMLE[[KMFrame[x, "Community"] ]] ) - KMFrame[x, "surv"] } )
KMFrame$residualParametric <- residualParametric
#Boxplot of medians
comms <- levels(df_scabies_filtered$community)
KMMedian <- lapply(1:5, function(x) { unname(summary(KMScabies[[x]])$table["median"])}) %>% unlist(.)
KMLower <- lapply(1:5, function(x) { unname(summary(KMScabies[[x]])$table["0.95LCL"])}) %>% unlist(.)
KMUpper <- lapply(1:5, function(x) { unname(summary(KMScabies[[x]])$table["0.95UCL"])}) %>% unlist(.)
KMMedianFrame <- data.frame(community = comms, model = rep("KM", length(comms)), median = KMMedian, lower = KMLower, upper=KMUpper)
KMMedianFrame[is.na(KMMedianFrame$upper), "upper"] <- KMMedianFrame[is.na(KMMedianFrame$upper), "median"]
CoxMedian <- summary(CPH)$table[,"median"]
CoxLower <- summary(CPH)$table[,"0.95LCL"]
CoxUpper <- summary(CPH)$table[,"0.95UCL"]
CoxMedianFrame <- data.frame(community = comms, model = rep("Cox", length(comms)), median = CoxMedian, lower = CoxLower, upper=CoxUpper)
ParametricMedian <- lapply(1:5, function(x) { (-log((0.5-listMLE[[x]]$alpha)/(1-listMLE[[x]]$alpha)))/listMLE[[x]]$lambda }) %>% unlist(.)
ParametricLower <- rbind.fill(estimatesLambda)$lower
ParametricUpper <- rbind.fill(estimatesLambda)$upper
ParametricMedianFrame <- data.frame(community = comms, model = rep("Parametric", length(comms)), median=ParametricMedian, lower=ParametricLower, upper=ParametricUpper)
medianFrame <- rbind.fill(KMMedianFrame, CoxMedianFrame, ParametricMedianFrame)
### Plotting ###
# Cox, Kaplan-Meier and Parametric, stratified by community, no CI.
ggplot() + geom_line(data = CoxFrame, aes(x=Time*12, y=S, colour=Community, linetype="Cox")) + geom_line(data = KMFrame, mapping = aes(x=Time*12, y=surv, colour=Community, linetype="Kaplan-Meier")) +
geom_line(data = MLEFrame, aes(x=time*12, y=estimate, colour=Community, linetype="Parametric")) + facet_wrap("Community") +
scale_linetype_manual(values = c("dashed","solid","dotted")) + theme_bw() + theme(legend.title = element_blank(), legend.position = c(0.92,0.15), legend.justification = c(1,0), text = element_text(size = 7)) +
labs(x="Age [months]", y="S(t)") + guides(colour = F) +
scale_x_continuous(limits = c(0, 60), expand=c(0,0)) + scale_y_continuous(limits = c(0, 1), expand=c(0,0)) +
theme(panel.grid = element_blank())
if (saveGraphics) {
ggsave(paste(graphicsPathName, "scabies_all_models.png", sep=""), width = 13.58, height = 8.75, units = "cm", type = "cairo-png")
}
# All Kaplan-Meier estimates, stratified by community, with CI.
ggplot() + geom_line(data = KMFrame, aes(x=Time*12, y=surv, colour=Community)) + geom_ribbon(data = KMFrame, aes(x=Time*12, ymin=lower, ymax=upper, fill=Community), alpha = 0.3) +
facet_wrap("Community") + theme_bw() + labs(x = "Age [months]", y = "S(t)") + theme(legend.position="none", text = element_text(size = 7)) +
scale_x_continuous(limits = c(0, 60), expand=c(0,0)) + scale_y_continuous(limits = c(0, 1), expand=c(0,0)) + theme(panel.grid = element_blank())
if (saveGraphics) {
ggsave(paste(graphicsPathName, "scabies_kaplan_meier.png", sep=""), width = 13.58, height = 8.75, units = "cm", type = "cairo-png")
}
# Residuals between Parametric and Kaplan-Meier model - postive indicates Parametric > Kaplan-Meier, so a higher survival probability.
ggplot() + geom_point(data = KMFrame, aes(x=Time, y=residualParametric, colour=Community)) + geom_hline(yintercept=0) +
facet_wrap("Community") + theme_bw() + labs(x = "Age [years]", y = "Residuals") + theme(legend.position="none", text = element_text(size = 7)) +
scale_x_continuous(limits = c(0, 6), expand=c(0,0)) + theme(panel.grid = element_blank())
if (saveGraphics) {
ggsave(paste(graphicsPathName, "scabies_residuals.png", sep=""), width = 13.58, height = 8.75, units = "cm", type = "cairo-png")
}
# Histogram of ages of first infection.
ggplot(data = filter(df_scabies_filtered, status == 1)) + geom_histogram(aes(x=time*12), bins=60, colour="black") + theme_bw() + labs(x="Age [months]", y="Frequency") +
theme(text = element_text(size=12)) + scale_x_continuous(limits = c(0, 60), expand=c(0,0)) + scale_y_continuous(limits = c(0, NA), expand=c(0,0)) + expand_limits(y=60) +
theme(panel.grid = element_blank())
if (saveGraphics) {
ggsave(paste(graphicsPathName, "scabies_ages_inection_histogram.png", sep=""), width = 13.58, height = 8.75, units="cm", type = "cairo-png")
}
#Bar chart of medians.
ggplot(data = medianFrame) + geom_boxplot(aes(x=model, lower=lower*12, upper=upper*12, middle=median*12, ymax = upper*12, ymin = lower*12, fill=model), stat = "identity") + facet_grid(.~community) +
theme_bw() + labs(x="Model", y="Median Age [months]") +
theme(text = element_text(size=7), axis.text.x= element_blank(), legend.title=element_blank()) + theme(panel.grid = element_blank()) + #+ scale_fill_grey(start = 0.35, name="Model")
coord_cartesian(ylim=c(0, 18))
if (saveGraphics) {
ggsave(paste(graphicsPathName, "scabies_median_comparisons.png", sep=""), width = 13.58, height = 8.75, units="cm", type = "cairo-png")
}
ggplot() + geom_line(data = CoxFrame, aes(x=Time*12, y=S, colour=Community, linetype="Cox")) + geom_line(data = KMFrame, mapping = aes(x=Time*12, y=surv, colour=Community, linetype="Kaplan-Meier")) +
geom_line(data = MLEFrame, aes(x=time*12, y=estimate, colour=Community, linetype="Parametric")) + facet_wrap("Community") +
scale_linetype_manual(values = c("dashed","solid","dotted")) + theme_bw() + theme(legend.title = element_blank(), legend.position = c(0.92,0.15), legend.justification = c(1,0), text = element_text(size = 7)) +
labs(x="Age [months]", y="S(t)") + guides(colour = F) +
scale_x_continuous(limits = c(0, 60), expand=c(0,0)) + scale_y_continuous(limits = c(0, 1), expand=c(0,0)) +
theme(panel.grid = element_blank())
colnames(KMFrame) <- c("Time", "S", "upper", "lower", "Community", "residualParametric")
colnames(MLEFrame) <- c("Time", "S", "Community")
KMFrame$Model <- rep("Kaplan-Meier", nrow(KMFrame))
MLEFrame$Model <- rep("Parametric", nrow(MLEFrame))
CoxFrame$Model <- rep("Cox", nrow(CoxFrame))
survframe <- rbind.fill(KMFrame, MLEFrame, CoxFrame)
ggplot(data = survframe) + geom_line(aes(x=Time*12, y=S, colour=Community)) + facet_grid(.~Model) +
theme_bw() + theme(text = element_text(size = 7)) +
labs(x="Age [months]", y="S(t)") +
scale_x_continuous(limits = c(0, 60), expand=c(0,0)) + scale_y_continuous(limits = c(0, 1), expand=c(0,0)) +
theme(panel.grid = element_blank())
ggsave(paste(graphicsPathName, "scabies_all_models.png", sep=""), width = 13.58, height = 8.75, units = "cm", type = "cairo-png")
ggsave(paste(graphicsPathName, "scabies_all_models.png", sep=""), width = 13.58, height = 6, units = "cm", type = "cairo-png")
survframe$Community <- relevel(survframe$Community, "Cox")
attach(survframe)
Community
Community <- as.factor(Community)
Community <- relevel(Community, "Cox")
survframe$Community <- relevel(survframe$Community, "Cox")
detach(survframe)
survframe$Community <- relevel(survframe$Community, "Cox")
survframe$Community <- as.factor(survframe$Community)
survframe$Community <- relevel(survframe$Community, "Cox")
?relevel
survframe$Model <- as.factor(survframe$Model)
survframe$Model <- relevel(survframe$Model, "Cox")
survframe$Model <- relevel(survframe$Model, "Parametric")
survframe$Model <- relevel(survframe$Model, "Kaplan-Meier")
ggplot(data = survframe) + geom_line(aes(x=Time*12, y=S, colour=Community)) + facet_grid(.~Model) +
theme_bw() + theme(text = element_text(size = 7)) +
labs(x="Age [months]", y="S(t)") +
scale_x_continuous(limits = c(0, 60), expand=c(0,0)) + scale_y_continuous(limits = c(0, 1), expand=c(0,0)) +
theme(panel.grid = element_blank())
ggsave(paste(graphicsPathName, "scabies_all_models.png", sep=""), width = 13.58, height = 6, units = "cm", type = "cairo-png")
ggsave(paste(graphicsPathName, "scabies_all_models.png", sep=""), width = 13.58, height = 6.1, units = "cm", type = "cairo-png")
CPH
CPH_scabies_communities <- CPH
fitCPH <- coxph(Surv(time, status)~birth_quarter, data=df_scabies_filtered)
covariates <- data.frame("birth_quarter"=c(1, 2, 3, 4))
CPH <- survfit(fitCPH, newdata=covariates)
covariates <- data.frame("birth_quarter"=as.factor(c(1, 2, 3, 4)))
CPH <- survfit(fitCPH, newdata=covariates)
CPH_scabies_birthquarters <- CPH
CPH_scabies_birthquarters
CPH_scabies_communities
0.405*12
(0.720-0.405)*12
library(pryr)
library(plyr)
library(dplyr)
library(ggplot2)
source('~/Documents/PhD/GAS/2016_East_Arnhem_Healthy_Skin/clinic/scripts/regressionTesting.R')
library(Cairo)
saveGraphics <- F
#Skin sores
graphicsPathName <- "/Users/mlydeamore/Documents/PhD/GAS/2016_East_Arnhem_Healthy_Skin/clinic/scripts/regression/"
#Data loading
df_skinsores <- loadGASData()
df_skinsores_filtered <- filter(df_skinsores, birth_year != 2006)
#Cox - All covariates
fullCPH <- coxph(Surv(time, status)~community+sex+birth_year+birth_quarter, data=df_skinsores_filtered)
#COX - Just Community
fitCPH <- coxph(Surv(time, status)~community_B+community_C+community_D+community_E, data=df_skinsores_filtered)
covariates <- data.frame(rbind(rep(0,4), diag(4)))
colnames(covariates) <- c("community_B","community_C","community_D","community_E")
CPH <- survfit(fitCPH, newdata = covariates)
ggframe <- data.frame(time = CPH$time, surv = CPH$surv)
colnames(ggframe) <- c("Time","A","B","C", "D", "E")
CoxFrame <- reshape2:::melt.data.frame(data=ggframe, id.vars = "Time", variable.name = "Community", value.name="S")
#Parametric
listMLE <- lapply(levels(df_skinsores_filtered$community), function(x) {fitParametricBy(df_skinsores_filtered, x)})
MLETime <- seq(0, 6, 0.02)
l <- lapply(1:5, function(x) { convertMLEToFrame(MLETime, listMLE[[x]], levels(df_skinsores_filtered$community)[x])})
MLEFrame <- rbind.fill(l)
#Bootstrapping for CI:
estimatesLambda <- lapply(1:5, function(x) {
bootstr <- bootstrap(listMLE[[x]]$alpha, listMLE[[x]]$lambda, df = filter(df_skinsores_filtered, community == levels(df_skinsores_filtered$community)[x]), n = 200)
estimatesAlpha <- sapply(X = bootstr["estimate", ], FUN=head, 1)
estimatesLambda <- sapply(X = bootstr["estimate",], FUN=tail, 1)
medians <- -log((0.5-estimatesAlpha)/(1-estimatesAlpha)) /estimatesLambda
return (data.frame(community = levels(df_skinsores_filtered$community)[x],
lower = quantile(medians, probs = 0.05), upper = quantile(medians, probs = 0.95),
lowerAlpha = quantile(estimatesAlpha, probs=0.05), upperAlpha = quantile(estimatesAlpha, probs=0.95),
lowerMean = quantile(1/estimatesLambda, probs=0.05), upperMean = quantile(1/estimatesLambda, probs=0.95)))})
#Kaplan-Meier
KMSkinsores <- lapply(levels(df_skinsores_filtered$community), fitKMByCommunity, df=df_skinsores_filtered)
KMList <- lapply(1:5, function(x) { ret <- data.frame(Time=KMSkinsores[[x]]$time, surv=KMSkinsores[[x]]$surv, upper=KMSkinsores[[x]]$upper, lower=KMSkinsores[[x]]$lower,
Community = rep(levels(df_skinsores_filtered$community)[x], length(KMSkinsores[[x]]$time)) )} )
KMFrame <- rbind.fill(KMList)
#Residuals
residualParametric <- sapply(seq(1, nrow(KMFrame)), function(x) { calculateParametricEstimateAtTime(KMFrame[x, "Time"], listMLE[[KMFrame[x, "Community"] ]] ) - KMFrame[x, "surv"] } )
KMFrame$residualParametric <- residualParametric
#Boxplot of medians
comms <- levels(df_skinsores_filtered$community)
KMMedian <- lapply(1:5, function(x) { unname(summary(KMSkinsores[[x]])$table["median"])}) %>% unlist(.)
KMLower <- lapply(1:5, function(x) { unname(summary(KMSkinsores[[x]])$table["0.95LCL"])}) %>% unlist(.)
KMUpper <- lapply(1:5, function(x) { unname(summary(KMSkinsores[[x]])$table["0.95UCL"])}) %>% unlist(.)
KMMedianFrame <- data.frame(community = comms, model = rep("KM", length(comms)), median = KMMedian, lower = KMLower, upper=KMUpper)
KMMedianFrame[is.na(KMMedianFrame$upper), "upper"] <- KMMedianFrame[is.na(KMMedianFrame$upper), "median"]
CoxMedian <- summary(CPH)$table[,"median"]
CoxLower <- summary(CPH)$table[,"0.95LCL"]
CoxUpper <- summary(CPH)$table[,"0.95UCL"]
CoxMedianFrame <- data.frame(community = comms, model = rep("Cox", length(comms)), median = CoxMedian, lower = CoxLower, upper=CoxUpper)
ParametricMedian <- lapply(1:5, function(x) { (-log((0.5-listMLE[[x]]$alpha)/(1-listMLE[[x]]$alpha)))/listMLE[[x]]$lambda }) %>% unlist(.)
ParametricLower <- rbind.fill(estimatesLambda)$lower
ParametricUpper <- rbind.fill(estimatesLambda)$upper
ParametricMedianFrame <- data.frame(community = comms, model = rep("Parametric", length(comms)), median=ParametricMedian, lower=ParametricLower, upper=ParametricUpper)
medianFrame <- rbind.fill(KMMedianFrame, CoxMedianFrame, ParametricMedianFrame)
### Plotting ###
# Cox, Kaplan-Meier and Parametric, stratified by community, no CI.
ggplot() + geom_line(data = KMFrame, mapping = aes(x=Time*12, y=surv, colour=Community, linetype="Kaplan-Meier")) +
geom_line(data = MLEFrame, aes(x=time*12, y=estimate, colour=Community, linetype="Parametric")) + facet_wrap("Community") +
geom_line(data = CoxFrame, aes(x=Time*12, y=S, colour=Community, linetype="Cox")) +
scale_linetype_manual(values = c("Kaplan-Meier"="solid", "Cox"="dashed", "Parametric"="dotted")) + theme_bw() + theme(legend.title = element_blank(), legend.position = c(0.92,0.15), legend.justification = c(1,0), text = element_text(size = 7)) +
labs(x="Age [months]", y="S(t)") + guides(colour = F) + theme(panel.grid = element_blank()) +
scale_x_continuous(limits = c(0, 60), expand=c(0,0)) + scale_y_continuous(limits = c(0, 1), expand=c(0,0))
if (saveGraphics) {
ggsave(paste(graphicsPathName, "gas_all_models.png", sep=""), width = 13.58, height = 8.75, units = "cm")
}
# All Kaplan-Meier estimates, stratified by community, with CI.
ggplot() + geom_line(data = KMFrame, aes(x=Time, y=surv, colour=Community)) + geom_ribbon(data = KMFrame, aes(x=Time, ymin=lower, ymax=upper, fill=Community), alpha = 0.3) +
facet_wrap("Community") + theme_bw() + labs(x = "Age [years]", y = "S(t)") + theme(legend.position="none", text = element_text(size = 7)) +
scale_x_continuous(limits = c(0, 6), expand=c(0,0)) + scale_y_continuous(limits = c(0, 1), expand=c(0,0)) + theme(panel.grid = element_blank())
if (saveGraphics) {
ggsave(paste(graphicsPathName, "gas_kaplan_meier.png", sep=""), width = 13.58, height = 8.75, units = "cm", type = "cairo-png")
}
# Residuals between Parametric and Kaplan-Meier model - postive indicates Parametric > Kaplan-Meier, so a higher survival probability.
ggplot() + geom_point(data = KMFrame, aes(x=Time, y=residualParametric, colour=Community)) + geom_hline(yintercept=0) +
facet_wrap("Community") + theme_bw() + labs(x = "Age [years]", y = "Residuals") + theme(legend.position="none", text = element_text(size = 7)) +
scale_x_continuous(limits = c(0, 6), expand=c(0,0))
if (saveGraphics) {
ggsave(paste(graphicsPathName, "gas_residuals.png", sep=""), width = 13.58, height = 8.75, units = "cm", type = "cairo-png")
}
# Histogram of ages of first infection.
ggplot(data = filter(df_skinsores_filtered, status == 1)) + geom_histogram(aes(x=time*12), bins=60, colour="black") + theme_bw() + labs(x="Age [months]", y="Frequency") +
theme(text = element_text(size=12)) + scale_x_continuous(limits = c(0, 60), expand=c(0,0)) + scale_y_continuous(limits = c(0, NA), expand=c(0,0)) + expand_limits(y=60) +
theme(panel.grid = element_blank())
if (saveGraphics) {
ggsave(paste(graphicsPathName, "gas_ages_inection_histogram.png", sep=""), width = 13.58, height = 8.75, units="cm", type = "cairo-png")
}
#Bar chart of medians.
ggplot(data = medianFrame) + geom_boxplot(aes(x=model, lower=lower*12, upper=upper*12, middle=median*12, ymax = upper*12, ymin = lower*12, fill=model), stat = "identity") + facet_grid(.~community) +
theme_bw() + labs(x="Model", y="Median Age [months]") +
theme(text = element_text(size=7), axis.text.x = element_blank(), legend.title = element_blank(), panel.grid = element_blank()) + #+ scale_fill_grey(start = 0.35, name="Model")
coord_cartesian(ylim=c(0, 18))
if (saveGraphics) {
ggsave(paste(graphicsPathName, "gas_median_comparisons.png", sep=""), width = 13.58, height = 8.75, units="cm", type = "cairo-png")
}
ggplot(data = medianFrame) + geom_boxplot(aes(x=community, lower=lower*12, upper=upper*12, middle=median*12, ymax = upper*12, ymin = lower*12, fill=community), stat = "identity") + facet_grid(.~model) +
theme_bw() + labs(x="Community", y="Median Age [months]", fill="Community") + theme(text = element_text(size=7), axis.text.x= element_blank()) + theme(panel.grid = element_blank()) + #+ scale_fill_grey(start = 0.35, name="Model")
coord_cartesian(ylim=c(0, 18))
colnames(KMFrame) <- c("Time", "S", "upper", "lower", "Community", "residualParametric")
colnames(MLEFrame) <- c("Time", "S", "Community")
KMFrame$Model <- rep("Kaplan-Meier", nrow(KMFrame))
MLEFrame$Model <- rep("Parametric", nrow(MLEFrame))
CoxFrame$Model <- rep("Cox", nrow(CoxFrame))
survframe <- rbind.fill(KMFrame, MLEFrame, CoxFrame)
ggplot(data = survframe) + geom_line(aes(x=Time*12, y=S, colour=Community)) + facet_grid(.~Model) +
theme_bw() + theme(text = element_text(size = 7)) +
labs(x="Age [months]", y="S(t)") +
scale_x_continuous(limits = c(0, 60), expand=c(0,0)) + scale_y_continuous(limits = c(0, 1), expand=c(0,0)) +
theme(panel.grid = element_blank())
head(medianFrame)
?gsub
medianFrame$model <- gsub("KM","Kaplan-Meier", medianFrame$model)
head(medianFrame)
ggplot(data = medianFrame) + geom_boxplot(aes(x=model, lower=lower*12, upper=upper*12, middle=median*12, ymax = upper*12, ymin = lower*12, fill=model), stat = "identity") + facet_grid(.~community) +
theme_bw() + labs(x="Model", y="Median Age [months]") +
theme(text = element_text(size=7), axis.text.x = element_blank(), legend.title = element_blank(), panel.grid = element_blank()) + #+ scale_fill_grey(start = 0.35, name="Model")
coord_cartesian(ylim=c(0, 18))
colnames(medianFrame) <- c("Community","Model","median","lower","upper")
ggplot(data = medianFrame) + geom_boxplot(aes(x=Community, lower=lower*12, upper=upper*12, middle=median*12, ymax = upper*12, ymin = lower*12, fill=Community), stat = "identity") + facet_grid(.~Model) +
theme_bw() + labs(x="Model", y="Median Age [months]") +
theme(text = element_text(size=7), axis.text.x = element_blank(), legend.title = element_blank(), panel.grid = element_blank()) + #+ scale_fill_grey(start = 0.35, name="Model")
coord_cartesian(ylim=c(0, 18))
ggplot(data = medianFrame) + geom_boxplot(aes(x=Community, lower=lower*12, upper=upper*12, middle=median*12, ymax = upper*12, ymin = lower*12, fill=Community), stat = "identity") + facet_grid(.~Model) +
theme_bw() + labs(x="Model", y="Median Age [months]") +
theme(text = element_text(size=7), axis.text.x = element_blank(), panel.grid = element_blank()) + #+ scale_fill_grey(start = 0.35, name="Model")
coord_cartesian(ylim=c(0, 18))
medianFrame$Model <- as.factor(medianFrame$Model)
medianFrame$Model <- relevel(medianFrame$Model, "Cox")
medianFrame$Model <- relevel(medianFrame$Model, "Parametric")
medianFrame$Model <- relevel(medianFrame$Model, "Kaplan-Meier")
ggplot(data = medianFrame) + geom_boxplot(aes(x=Community, lower=lower*12, upper=upper*12, middle=median*12, ymax = upper*12, ymin = lower*12, fill=Community), stat = "identity") + facet_grid(.~Model) +
theme_bw() + labs(x="Model", y="Median Age [months]") +
theme(text = element_text(size=7), axis.text.x = element_blank(), panel.grid = element_blank()) + #+ scale_fill_grey(start = 0.35, name="Model")
coord_cartesian(ylim=c(0, 18))
ggplot(data = medianFrame) + geom_boxplot(aes(x=Community, lower=lower*12, upper=upper*12, middle=median*12, ymax = upper*12, ymin = lower*12, fill=Community), stat = "identity") + facet_grid(.~Model) +
theme_bw() + labs(x="Model", y="Median Age [months]") +
theme(text = element_text(size=7), axis.text.x = element_blank(), panel.grid = element_blank()) + #+ scale_fill_grey(start = 0.35, name="Model")
()
ggplot(data = medianFrame) + geom_boxplot(aes(x=Community, lower=lower*12, upper=upper*12, middle=median*12, ymax = upper*12, ymin = lower*12, fill=Community), stat = "identity") + facet_grid(.~Model) +
theme_bw() + labs(x="Model", y="Median Age [months]") +
theme(text = element_text(size=7), axis.text.x = element_blank(), panel.grid = element_blank()) + #+ scale_fill_grey(start = 0.35, name="Model")
r
ggplot(data = medianFrame) + geom_boxplot(aes(x=Community, lower=lower*12, upper=upper*12, middle=median*12, ymax = upper*12, ymin = lower*12, fill=Community), stat = "identity") + facet_grid(.~Model) +
theme_bw() + labs(x="Model", y="Median Age [months]") +
theme(text = element_text(size=7), axis.text.x = element_blank(), panel.grid = element_blank())
ggplot(data = medianFrame) + geom_boxplot(aes(x=Community, lower=lower*12, upper=upper*12, middle=median*12, ymax = upper*12, ymin = lower*12, fill=Community), stat = "identity") + facet_grid(.~Model) +
theme_bw() + labs(x="Model", y="Median Age [months]") +
theme(text = element_text(size=7), axis.text.x = element_blank(), panel.grid = element_blank()) + coord_cartesian(ylim=c(0, 12))
ggplot(data = medianFrame) + geom_boxplot(aes(x=Community, lower=lower*12, upper=upper*12, middle=median*12, ymax = upper*12, ymin = lower*12, fill=Community), stat = "identity") + facet_grid(.~Model) +
theme_bw() + labs(x="Model", y="Median Age [months]") +
theme(text = element_text(size=7), axis.text.x = element_blank(), panel.grid = element_blank()) + coord_cartesian(ylim=c(0, 11.5))
presentation_theme <- theme(
panel.background = element_rect(fill = "transparent",colour = NA),
panel.border = element_rect(colour="white", size=2),
strip.background = element_rect(fill="#3C557F"),
strip.text = element_text(colour="white"),
plot.background = element_rect(fill = "transparent",colour = NA),
panel.grid = element_blank(),
text=element_text(colour="white",size=30,face="bold"),
axis.line=element_line(colour="white",size=3),
axis.ticks=element_line(colour="white",size=3),
axis.text = element_text(colour="white",size=20),
legend.title = element_text(size=22,margin=(b=2)),
legend.background = element_rect(colour="white",fill="transparent"),
legend.key.size=unit(15,"mm"),
legend.key = element_rect(fill="transparent",colour="transparent")#,
#legend.text = element_text(size=20)
)
p <- ggplot(data = medianFrame) + geom_boxplot(aes(x=Community, lower=lower*12, upper=upper*12, middle=median*12, ymax = upper*12, ymin = lower*12, fill=Community), stat = "identity") + facet_grid(.~model) +
theme_bw() + labs(x="Community", y="Median Age [months]") +
theme(text = element_text(size=7), axis.text.x = element_blank(), legend.title = element_blank(), panel.grid = element_blank()) + #+ scale_fill_grey(start = 0.35, name="Model")
coord_cartesian(ylim=c(0, 11.5)) + presentation_theme
png("skinsores-medians-transparent.png", width=1280, height=600,units="px",bg = "transparent")
print(p)
dev.off()
p <- ggplot(data = medianFrame) + geom_boxplot(aes(x=Community, lower=lower*12, upper=upper*12, middle=median*12, ymax = upper*12, ymin = lower*12, fill=Community), stat = "identity") + facet_grid(.~Model) +
theme_bw() + labs(x="Community", y="Median Age [months]") +
theme(text = element_text(size=7), axis.text.x = element_blank(), legend.title = element_blank(), panel.grid = element_blank()) + #+ scale_fill_grey(start = 0.35, name="Model")
coord_cartesian(ylim=c(0, 11.5)) + presentation_theme
png("skinsores-medians-transparent.png", width=1280, height=600,units="px",bg = "transparent")
print(p)
dev.off()
setwd()
getwd()
setwd("~/Documents/PhD/MarkovChainSimulator/")
df <- read.csv("sigs1.csv")
library(dynamite)
ggplotMatrix(df, id.vars=c("t"))
library(reshape2)
ggplotMatrix(df, id.vars=c("t"))
library(ggplot2)
ggplotMatrix(df, id.vars=c("t"))
df <- read.csv("sigs1.csv")
ggplotMatrix(df, id.vars=c("t"))
df <- read.csv("sigs1.csv")
ggplotMatrix(df, id.vars=c("t"))
df <- read.csv("sigs1.csv")
ggplotMatrix(df, id.vars=c("t"))
df <- read.csv("sigs1.csv")
ggplotMatrix(df, id.vars=c("t"))
df <- read.csv("sigs1.csv")
ggplotMatrix(df, id.vars=c("t"))
